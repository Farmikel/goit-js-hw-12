{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '50378123-4d32872220f2974038eb09c45';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function getImagesByQuery(query) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  };\n\n  const response = await axios.get(BASE_URL, { params });\n  return response.data;\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryContainer = document.querySelector('.gallery');\nlet lightbox;\n\nexport function createGallery(images) {\n  const markup = images\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `\n      <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img\n            class=\"gallery-image\"\n            src=\"${webformatURL}\"\n            alt=\"${tags}\"\n          />\n        </a>\n        <div class=\"image-info\">\n            <div class=\"info\">\n              <span class=\"info-title\">Likes</span>\n              <span class=\"stats\">${likes}</span>\n            </div> \n            <div class=\"info\">\n              <span class=\"info-title\">Views</span>\n              <span class=\"stats\">${views}</span>\n            </div> \n            <div class=\"info\">\n              <span class=\"info-title\">Comments</span>\n              <span class=\"stats\">${comments}</span>\n            </div> \n            <div class=\"info\">\n              <span class=\"info-title\">Downloads</span>\n              <span class=\"stats\">${downloads}</span>\n            </div> \n        </div>\n      </li>\n    `).join('');\n\n  galleryContainer.insertAdjacentHTML('beforeend', markup);\n  \n  if (!lightbox) {\n    lightbox = new SimpleLightbox('.gallery a');\n  } else {\n    lightbox.refresh();\n  }\n}\n\nexport function clearGallery() {\n  galleryContainer.innerHTML = '';\n}\n\nexport function showLoader() {\n  const loader = document.querySelector('.loader');\n  loader.classList.remove('visually-hidden');\n}\n\nexport function hideLoader() {\n  const loader = document.querySelector('.loader');\n  loader.classList.add('visually-hidden');\n}","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { getImagesByQuery } from './js/pixabay-api.js';\nimport { createGallery, clearGallery, showLoader, hideLoader } from './js/render-functions.js';\n\nconst searchForm = document.querySelector('.form');\n\nsearchForm.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  \n  const searchInput = event.target.elements['search-text'];\n  const query = searchInput.value.trim();\n\n  if (!query) {\n    iziToast.error({\n      message: \"Please enter a search query\",\n      position: \"topRight\",\n      color: \"#EF4040\",\n      maxWidth: \"432px\",\n      messageColor: \"#FAFAFB\",\n      iconColor: \"#FFFFFF\",\n      messageSize: \"16px\",\n    });\n    return;\n  }\n\n  try {\n    showLoader();\n    clearGallery();\n    \n    const data = await getImagesByQuery(query);\n    \n    if (data.hits.length === 0) {\n      iziToast.error({\n        message: \"Sorry, there are no images matching your search query. Please try again!\",\n        position: \"topRight\",\n        color: \"#EF4040\",\n        maxWidth: \"432px\",\n        messageColor: \"#FAFAFB\",\n        iconColor: \"#FFFFFF\",\n        messageSize: \"16px\",\n      });\n      return;\n    }\n\n    createGallery(data.hits);\n  } catch (error) {\n    iziToast.error({\n      message: \"Something went wrong. Please try again later!\",\n      position: \"topRight\",\n      color: \"#EF4040\",\n      maxWidth: \"432px\",\n      messageColor: \"#FAFAFB\",\n      iconColor: \"#FFFFFF\",\n      messageSize: \"16px\",\n    });\n  } finally {\n    hideLoader();\n    searchForm.reset();\n  }\n});"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","params","axios","galleryContainer","lightbox","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","clearGallery","showLoader","hideLoader","searchForm","event","iziToast","data"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAiBC,EAAO,CAC5C,MAAMC,EAAS,CACb,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EAGE,OADiB,MAAME,EAAM,IAAIJ,EAAU,CAAE,OAAAG,CAAM,CAAE,GACrC,IAClB,CCbA,MAAME,EAAmB,SAAS,cAAc,UAAU,EAC1D,IAAIC,EAEG,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EACZ,IACC,CAAC,CACC,aAAAE,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IAAY;AAAA;AAAA,wCAE4BL,CAAa;AAAA;AAAA;AAAA,mBAGlCD,CAAY;AAAA,mBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAMaC,CAAK;AAAA;AAAA;AAAA;AAAA,oCAILC,CAAK;AAAA;AAAA;AAAA;AAAA,oCAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,oCAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,KAIxC,EAAE,KAAK,EAAE,EAEZX,EAAiB,mBAAmB,YAAaI,CAAM,EAElDH,EAGHA,EAAS,QAAO,EAFhBA,EAAW,IAAIW,EAAe,YAAY,CAI9C,CAEO,SAASC,GAAe,CAC7Bb,EAAiB,UAAY,EAC/B,CAEO,SAASc,GAAa,CACZ,SAAS,cAAc,SAAS,EACxC,UAAU,OAAO,iBAAiB,CAC3C,CAEO,SAASC,GAAa,CACZ,SAAS,cAAc,SAAS,EACxC,UAAU,IAAI,iBAAiB,CACxC,CC/DA,MAAMC,EAAa,SAAS,cAAc,OAAO,EAEjDA,EAAW,iBAAiB,SAAU,MAAOC,GAAU,CACrDA,EAAM,eAAc,EAGpB,MAAMpB,EADcoB,EAAM,OAAO,SAAS,aAAa,EAC7B,MAAM,KAAI,EAEpC,GAAI,CAACpB,EAAO,CACVqB,EAAS,MAAM,CACb,QAAS,8BACT,SAAU,WACV,MAAO,UACP,SAAU,QACV,aAAc,UACd,UAAW,UACX,YAAa,MACnB,CAAK,EACD,MACD,CAED,GAAI,CACFJ,IACAD,IAEA,MAAMM,EAAO,MAAMvB,EAAiBC,CAAK,EAEzC,GAAIsB,EAAK,KAAK,SAAW,EAAG,CAC1BD,EAAS,MAAM,CACb,QAAS,2EACT,SAAU,WACV,MAAO,UACP,SAAU,QACV,aAAc,UACd,UAAW,UACX,YAAa,MACrB,CAAO,EACD,MACD,CAEDhB,EAAciB,EAAK,IAAI,CACxB,MAAe,CACdD,EAAS,MAAM,CACb,QAAS,gDACT,SAAU,WACV,MAAO,UACP,SAAU,QACV,aAAc,UACd,UAAW,UACX,YAAa,MACnB,CAAK,CACL,QAAY,CACRH,IACAC,EAAW,MAAK,CACjB,CACH,CAAC"}